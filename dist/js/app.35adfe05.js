"serviceWorker"in navigator&&window.addEventListener("load",()=>{navigator.serviceWorker.register("/js/service-worker.js").then(e=>{console.log("Service Worker 注册成功:",e.scope)}).catch(e=>{console.log("Service Worker 注册失败:",e)})});class OfficeWellnessApp{constructor(){this.isInitialized=!1,this.errorHandler=null,this.mobileAdapter=null,this.storageManager=null,this.appSettings=null,this.notificationService=null,this.activityDetector=null,this.waterReminder=null,this.postureReminder=null,this.uiController=null,this.appState={isInitializing:!1,isFirstUse:!1,lastSessionTime:null,compatibilityChecked:!1}}async initialize(){try{console.log("正在初始化办公族健康提醒应用..."),this.appState.isInitializing=!0,await this.initializeComponents(),await this.loadSettingsAndState(),this.setupEventListeners(),this.initializeUI(),await this.requestNotificationPermission(),await this.restorePreviousState(),this.appSettings.isFirstUse()&&this.showFirstUseGuide(),this.isInitialized=!0,this.appState.isInitializing=!1,console.log("应用初始化完成"),this.appState.lastSessionTime=Date.now()}catch(e){console.error("应用初始化失败:",e),this.appState.isInitializing=!1,this.handleInitializationError(e)}}async initializeComponents(){try{this.errorHandler=new ErrorHandler,this.mobileAdapter=new MobileAdapter(this.errorHandler),this.checkBrowserCompatibility(),this.storageManager=new StorageManager,this.appSettings=new AppSettings(this.storageManager),this.notificationService=new NotificationService,this.activityDetector=new ActivityDetector(e=>{if(console.log("用户活动状态变化:",e),this.appSettings){const t=this.appSettings.getState();t.userActivity={isActive:e.isActive,lastActivityTime:e.lastActivityTime,awayStartTime:e.awayStartTime},this.appSettings.updateState(t)}});const e=this.appSettings.getSettings();this.waterReminder=new WaterReminder(e.water,this.notificationService),this.postureReminder=new PostureReminder(e.posture,this.notificationService,this.activityDetector),this.uiController=new UIController,this.mobileAdapter&&this.mobileAdapter.applyMobileAdaptation()}catch(e){throw console.error("初始化组件失败:",e),this.errorHandler&&this.errorHandler.handleError({type:"initialization",error:e,message:"初始化组件失败: "+(e.message||"未知错误"),timestamp:Date.now()}),e}}checkBrowserCompatibility(){if(this.mobileAdapter&&!this.appState.compatibilityChecked)try{const e=this.mobileAdapter.checkFeaturesAndFallbacks();return this.appState.compatibilityChecked=!0,Object.values(e.supported).includes(!1)&&document.addEventListener("DOMContentLoaded",()=>{setTimeout(()=>{this.uiController&&this.uiController.isInitialized&&this.mobileAdapter.showCompatibilityNotice(document.body)},1e3)}),e}catch(e){console.error("检查浏览器兼容性失败:",e),this.errorHandler&&this.errorHandler.handleError({type:"compatibility",error:e,message:"检查浏览器兼容性失败: "+(e.message||"未知错误"),timestamp:Date.now()})}}async loadSettingsAndState(){try{const e=this.appSettings.loadSettings();console.log("已加载用户设置:",e);const t=this.appSettings.loadState();return console.log("已加载应用状态:",t),this.appState.isFirstUse=this.appSettings.isFirstUse(),{settings:e,state:t}}catch(e){throw console.warn("加载设置和状态失败:",e),e}}saveSettings(){try{const e=this.appSettings.getSettings();return this.appSettings.saveSettings(e),console.log("设置已保存"),!0}catch(e){return console.error("保存设置失败:",e),!1}}saveAppState(){try{const e=this.waterReminder?this.waterReminder.getCurrentStatus():null,t=this.postureReminder?this.postureReminder.getCurrentStatus():null,i=this.appSettings.getState();return e&&(i.waterReminder={isActive:e.isActive,timeRemaining:e.timeRemaining,nextReminderAt:e.nextReminderAt,lastAcknowledged:e.lastAcknowledged}),t&&(i.postureReminder={isActive:t.isActive,timeRemaining:t.timeRemaining,nextReminderAt:t.nextReminderAt,lastAcknowledged:t.lastAcknowledged}),this.appSettings.saveState(i),console.log("应用状态已保存"),!0}catch(e){return console.error("保存应用状态失败:",e),!1}}setupEventListeners(){this.waterReminder&&(this.waterReminder.setStatusChangeCallback(e=>{console.log("水提醒状态变化:",e),this.uiController&&this.uiController.updateReminderStatus("water",e)}),this.waterReminder.setTimeUpdateCallback(e=>{this.uiController&&this.uiController.updateReminderTime("water",e)})),this.postureReminder&&(this.postureReminder.setStatusChangeCallback(e=>{if(console.log("久坐提醒状态变化:",e),this.uiController&&this.uiController.updateReminderStatus("posture",e),e.isAuto){const t="paused"===e.status?"检测到您已离开，久坐提醒已自动暂停":"检测到您已返回，久坐提醒已自动恢复";this.notificationService.showInPageAlert("info",{title:"活动检测",message:t})}}),this.postureReminder.setTimeUpdateCallback(e=>{this.uiController&&this.uiController.updateReminderTime("posture",e)}))}initializeUI(){this.uiController?(this.uiController.initialize(),this.uiController.applySettingsToUI(this.currentSettings),this.setupUIEventHandlers(),console.log("UI初始化完成")):console.error("UI控制器未初始化")}setupUIEventHandlers(){this.uiController&&(this.uiController.on("waterToggle",e=>{e.isActive?this.startReminder("water"):this.stopReminder("water")}),this.uiController.on("waterReset",()=>{this.resetReminder("water")}),this.uiController.on("waterDrink",()=>{this.waterReminder&&(this.waterReminder.acknowledge(),this.updateDailyStats("water"))}),this.uiController.on("postureToggle",e=>{e.isActive?this.startReminder("posture"):this.stopReminder("posture")}),this.uiController.on("postureReset",()=>{this.resetReminder("posture")}),this.uiController.on("postureActivity",()=>{this.postureReminder&&(this.postureReminder.acknowledge(),this.updateDailyStats("posture"))}),this.uiController.on("startAll",()=>{this.startReminder("water"),this.startReminder("posture")}),this.uiController.on("pauseAll",()=>{this.stopReminder("water"),this.stopReminder("posture")}),this.uiController.on("saveSettings",()=>{this.handleSaveSettings()}),this.uiController.on("resetSettings",()=>{this.handleResetSettings()}))}handleSaveSettings(){try{const e=this.uiController.getSettingsFromUI();if(!this.appSettings.validateSettings(e))throw new Error("设置验证失败");this.appSettings.updateSettings(e),this.waterReminder&&e.water&&this.waterReminder.updateSettings(e.water),this.postureReminder&&e.posture&&this.postureReminder.updateSettings(e.posture),this.notificationService.showInPageAlert("success",{title:"设置已保存",message:"您的设置已成功保存并应用"}),this.uiController.hideSettings()}catch(e){console.error("保存设置失败:",e),this.notificationService.showInPageAlert("error",{title:"保存失败",message:"设置保存失败，请重试"})}}handleResetSettings(){try{const e=this.appSettings.resetSettings();this.uiController.applySettingsToUI(e),this.waterReminder&&this.waterReminder.updateSettings(e.water),this.postureReminder&&this.postureReminder.updateSettings(e.posture),this.notificationService.showInPageAlert("success",{title:"设置已重置",message:"所有设置已恢复为默认值"})}catch(e){console.error("重置设置失败:",e),this.notificationService.showInPageAlert("error",{title:"重置失败",message:"设置重置失败，请重试"})}}updateDailyStats(e){try{const t=`dailyStats_${(new Date).toDateString()}`;let i=this.storageManager.loadSettings(t)||{water:{completed:0,target:8},posture:{completed:0,target:8}};const s=this.appSettings.getSettings();"water"===e&&s.water?i.water.target=s.water.target:"posture"===e&&s.posture&&(i.posture.target=s.posture.target),i[e]&&(i[e].completed+=1),this.storageManager.saveSettings(t,i),this.uiController&&this.uiController.updateDailyProgress(e,i[e].completed,i[e].target),console.log(`${e}统计已更新:`,i[e])}catch(e){console.error("更新每日统计失败:",e)}}async restorePreviousState(){try{console.log("正在恢复上次会话状态...");const e=this.appSettings.getState(),t=this.appSettings.getSettings();if(e.waterReminder&&this.waterReminder&&e.waterReminder.isActive&&t.water.enabled){console.log("恢复水提醒状态");let i=0;if(e.waterReminder.nextReminderAt){const t=Date.now(),s=e.waterReminder.nextReminderAt;i=Math.max(0,s-t)}i>0&&i<60*t.water.interval*1e3?this.waterReminder.restoreState({isActive:!0,timeRemaining:i,nextReminderAt:e.waterReminder.nextReminderAt,lastAcknowledged:e.waterReminder.lastAcknowledged}):this.waterReminder.start()}if(e.postureReminder&&this.postureReminder&&e.postureReminder.isActive&&t.posture.enabled){console.log("恢复久坐提醒状态");let i=0;if(e.postureReminder.nextReminderAt){const t=Date.now(),s=e.postureReminder.nextReminderAt;i=Math.max(0,s-t)}i>0&&i<60*t.posture.interval*1e3?this.postureReminder.restoreState({isActive:!0,timeRemaining:i,nextReminderAt:e.postureReminder.nextReminderAt,lastAcknowledged:e.postureReminder.lastAcknowledged}):this.postureReminder.start()}return e.userActivity&&this.activityDetector&&this.activityDetector.setLastActivityTime(e.userActivity.lastActivityTime||Date.now()),console.log("会话状态恢复完成"),!0}catch(e){return console.error("恢复会话状态失败:",e),!1}}showFirstUseGuide(){try{console.log("显示首次使用引导...");const e=document.createElement("div");e.className="guide-overlay",e.innerHTML='\n                <div class="guide-modal">\n                    <div class="guide-header">\n                        <h2>欢迎使用办公族健康提醒</h2>\n                        <button class="btn-close" id="guide-close">✕</button>\n                    </div>\n                    <div class="guide-content">\n                        <div class="guide-step">\n                            <div class="guide-step-number">1</div>\n                            <div class="guide-step-content">\n                                <h3>设置提醒间隔</h3>\n                                <p>根据您的需要设置喝水和久坐提醒的时间间隔</p>\n                            </div>\n                        </div>\n                        <div class="guide-step">\n                            <div class="guide-step-number">2</div>\n                            <div class="guide-step-content">\n                                <h3>开启提醒</h3>\n                                <p>点击"开始"按钮启动提醒功能</p>\n                            </div>\n                        </div>\n                        <div class="guide-step">\n                            <div class="guide-step-number">3</div>\n                            <div class="guide-step-content">\n                                <h3>确认完成</h3>\n                                <p>收到提醒后，点击"已完成"按钮确认并重置计时器</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="guide-footer">\n                        <button class="btn-primary" id="guide-settings">设置提醒</button>\n                        <button class="btn-secondary" id="guide-start">直接开始</button>\n                    </div>\n                </div>\n            ',document.body.appendChild(e),document.getElementById("guide-close").addEventListener("click",()=>{this.closeFirstUseGuide(e)}),document.getElementById("guide-settings").addEventListener("click",()=>{this.closeFirstUseGuide(e),this.uiController&&this.uiController.showSettings()}),document.getElementById("guide-start").addEventListener("click",()=>{this.closeFirstUseGuide(e),this.startReminder("water"),this.startReminder("posture")}),this.appSettings.markFirstUseComplete()}catch(e){console.error("显示首次使用引导失败:",e)}}closeFirstUseGuide(e){e&&e.parentNode&&e.parentNode.removeChild(e)}getErrorMessage(e){return e.message.includes("localStorage")?"本地存储不可用，设置将无法保存":e.message.includes("notification")?"通知功能不可用，将使用页面内提醒":e.message.includes("audio")?"音频功能不可用，将使用静音提醒":"应用启动时遇到问题，部分功能可能不可用"}showFallbackError(e){const t=document.createElement("div");t.style.cssText="\n            position: fixed;\n            top: 20px;\n            left: 50%;\n            transform: translateX(-50%);\n            background: #f44336;\n            color: white;\n            padding: 1rem 2rem;\n            border-radius: 8px;\n            z-index: 9999;\n            font-family: Arial, sans-serif;\n            max-width: 400px;\n            text-align: center;\n        ",t.textContent=e,document.body.appendChild(t),setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t)},5e3)}async requestNotificationPermission(){if(this.currentSettings.notifications.browserNotifications)try{await this.notificationService.requestPermission()||this.uiController.showPermissionPrompt(async()=>{await this.notificationService.requestPermission()?console.log("通知权限已获得"):console.log("用户拒绝了通知权限")},()=>{console.log("用户选择不开启通知权限"),this.currentSettings.notifications.browserNotifications=!1,this.saveSettings()})}catch(e){console.warn("请求通知权限失败:",e)}}handleInitializationError(e){let t;console.error("应用初始化错误:",e),t=this.errorHandler?this.errorHandler.getUserFriendlyError(e):{title:"初始化失败",message:this.getErrorMessage(e),type:"error",solution:"请刷新页面重试"};try{this.uiController&&this.uiController.isInitialized?(this.uiController.showInPageNotification(t.type||"error",t.title||"初始化失败",t.message),t.solution&&console.info("建议解决方案:",t.solution)):this.showFallbackError(t.message||"应用初始化失败")}catch(e){console.error("显示错误信息失败:",e),this.showFallbackError("应用启动失败，请刷新页面重试")}}startReminder(e){const t=this.appSettings.getSettings();"water"===e&&this.waterReminder?(this.waterReminder.start(),t.water.enabled=!0,this.appSettings.updateSettings(t),this.saveAppState()):"posture"===e&&this.postureReminder&&(this.postureReminder.start(),t.posture.enabled=!0,this.appSettings.updateSettings(t),this.saveAppState())}stopReminder(e){const t=this.appSettings.getSettings();"water"===e&&this.waterReminder?(this.waterReminder.stop(),t.water.enabled=!1,this.appSettings.updateSettings(t),this.saveAppState()):"posture"===e&&this.postureReminder&&(this.postureReminder.stop(),t.posture.enabled=!1,this.appSettings.updateSettings(t),this.saveAppState())}resetReminder(e){"water"===e&&this.waterReminder?(this.waterReminder.reset(),this.saveAppState()):"posture"===e&&this.postureReminder&&(this.postureReminder.reset(),this.saveAppState())}updateSettings(e){try{const t=this.appSettings.updateSettings(e);return e.water&&this.waterReminder&&this.waterReminder.updateSettings(e.water),e.posture&&this.postureReminder&&this.postureReminder.updateSettings(e.posture),this.uiController&&this.uiController.updateSettings(t),this.saveAppState(),console.log("设置已更新:",t),t}catch(e){throw console.error("更新设置失败:",e),e}}getAppState(){return{isInitialized:this.isInitialized,settings:this.appSettings?.getSettings(),state:this.appSettings?.getState(),waterReminder:this.waterReminder?.getCurrentStatus(),postureReminder:this.postureReminder?.getCurrentStatus()}}}let app=null;document.addEventListener("DOMContentLoaded",async()=>{try{app=new OfficeWellnessApp,await app.initialize()}catch(e){console.error("应用启动失败:",e);const t=document.createElement("div");t.style.cssText="\n            position: fixed;\n            top: 20px;\n            left: 50%;\n            transform: translateX(-50%);\n            background: #f44336;\n            color: white;\n            padding: 1rem 2rem;\n            border-radius: 8px;\n            z-index: 9999;\n            font-family: Arial, sans-serif;\n        ",t.textContent="应用启动失败，请刷新页面重试",document.body.appendChild(t),setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t)},5e3)}}),window.addEventListener("beforeunload",()=>{app&&app.isInitialized&&(app.saveSettings(),app.saveAppState())}),document.addEventListener("visibilitychange",()=>{app&&app.isInitialized&&("hidden"===document.visibilityState?app.saveAppState():document.visibilityState)}),window.OfficeWellnessApp=OfficeWellnessApp;