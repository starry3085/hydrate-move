class ActivityDetector{constructor(t){this.callback=t,this.lastActivityTime=Date.now(),this.isMonitoring=!1,this.awayThreshold=3e5,this.checkInterval=null,this.checkIntervalTime=3e4,this.isAway=!1,this.handleActivity=this.handleActivity.bind(this),this.handleVisibilityChange=this.handleVisibilityChange.bind(this),this.checkUserActivity=this.checkUserActivity.bind(this)}startMonitoring(){this.isMonitoring||(document.addEventListener("mousemove",this.handleActivity),document.addEventListener("mousedown",this.handleActivity),document.addEventListener("keydown",this.handleActivity),document.addEventListener("scroll",this.handleActivity),document.addEventListener("visibilitychange",this.handleVisibilityChange),this.checkInterval=setInterval(this.checkUserActivity,this.checkIntervalTime),this.isMonitoring=!0,this.lastActivityTime=Date.now(),console.log("活动检测器已启动"))}stopMonitoring(){this.isMonitoring&&(document.removeEventListener("mousemove",this.handleActivity),document.removeEventListener("mousedown",this.handleActivity),document.removeEventListener("keydown",this.handleActivity),document.removeEventListener("scroll",this.handleActivity),document.removeEventListener("visibilitychange",this.handleVisibilityChange),this.checkInterval&&(clearInterval(this.checkInterval),this.checkInterval=null),this.isMonitoring=!1,console.log("活动检测器已停止"))}handleActivity(t){const i=Date.now();this.lastActivityTime=i,this.isAway&&(this.isAway=!1,this.callback&&this.callback({type:"user-return",timestamp:i,awayDuration:this.getAwayDuration()}),console.log("用户已返回"))}handleVisibilityChange(){"visible"===document.visibilityState?this.handleActivity({type:"visibility-change"}):console.log("页面不可见")}checkUserActivity(){const t=Date.now();t-this.lastActivityTime>this.awayThreshold&&!this.isAway&&(this.isAway=!0,this.callback&&this.callback({type:"user-away",timestamp:t,lastActivity:this.lastActivityTime}),console.log("用户已离开"))}isUserActive(){return!this.isAway}getLastActivityTime(){return this.lastActivityTime}getAwayDuration(){return Date.now()-this.lastActivityTime}setAwayThreshold(t){return"number"==typeof t&&t>0&&(this.awayThreshold=60*t*1e3,!0)}setLastActivityTime(t){return"number"==typeof t&&t>0&&(this.lastActivityTime=t,Date.now()-this.lastActivityTime>this.awayThreshold?this.isAway=!0:this.isAway=!1,!0)}}