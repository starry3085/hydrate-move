const CACHE_VERSION="2",CACHE_NAME="office-wellness-reminder-v2",STATIC_CACHE="static-cache-v2",DYNAMIC_CACHE="dynamic-cache-v2",ASSETS_CACHE="assets-cache-v2",STATIC_ASSETS=["/","/index.html","/styles/main.css","/manifest.json","/favicon.ico"],JS_ASSETS=["/js/app.js","/js/activity-detector.js","/js/app-settings.js","/js/error-handler.js","/js/mobile-adapter.js","/js/notification-service.js","/js/posture-reminder.js","/js/reminder-manager.js","/js/storage-manager.js","/js/ui-controller.js","/js/water-reminder.js"],MEDIA_ASSETS=["/assets/default-icon.png","/assets/favicon.ico","/assets/notification.mp3","/assets/posture-icon.png","/assets/posture-reminder.mp3","/assets/water-icon.png","/assets/water-reminder.mp3"];function getCacheStrategy(e){const t=new URL(e);return STATIC_ASSETS.includes(t.pathname)||JS_ASSETS.includes(t.pathname)||t.pathname.endsWith(".js")?{cacheName:STATIC_CACHE,strategy:"cache-first"}:MEDIA_ASSETS.includes(t.pathname)||t.pathname.endsWith(".png")||t.pathname.endsWith(".jpg")||t.pathname.endsWith(".svg")||t.pathname.endsWith(".mp3")||t.pathname.endsWith(".ico")?{cacheName:ASSETS_CACHE,strategy:"cache-first"}:{cacheName:DYNAMIC_CACHE,strategy:"network-first"}}async function cacheFirst(e,t){const s=await caches.open(t),n=await s.match(e);if(n)return n;try{const t=await fetch(e);if(t&&200===t.status){const n=t.clone();s.put(e,n)}return t}catch(e){return console.error("[Service Worker] 缓存优先策略失败:",e),new Response("网络请求失败，无法获取资源",{status:408,headers:{"Content-Type":"text/plain"}})}}async function networkFirst(e,t){try{const s=await fetch(e);if(s&&200===s.status){const n=await caches.open(t),a=s.clone();n.put(e,a)}return s}catch(s){console.log("[Service Worker] 网络请求失败，尝试从缓存获取");const n=await caches.open(t);return await n.match(e)||new Response("您当前处于离线状态，无法获取资源",{status:503,headers:{"Content-Type":"text/plain"}})}}self.addEventListener("install",e=>{console.log("[Service Worker] 安装中..."),self.skipWaiting(),e.waitUntil(Promise.all([caches.open(STATIC_CACHE).then(e=>(console.log("[Service Worker] 缓存静态资源"),e.addAll(STATIC_ASSETS))),caches.open(STATIC_CACHE).then(e=>(console.log("[Service Worker] 缓存JS资源"),e.addAll(JS_ASSETS))),caches.open(ASSETS_CACHE).then(e=>(console.log("[Service Worker] 缓存媒体资源"),e.addAll(MEDIA_ASSETS)))]))}),self.addEventListener("activate",e=>{console.log("[Service Worker] 激活中..."),e.waitUntil(clients.claim()),e.waitUntil(caches.keys().then(e=>Promise.all(e.map(e=>{if(e!==STATIC_CACHE&&e!==DYNAMIC_CACHE&&e!==ASSETS_CACHE)return console.log("[Service Worker] 删除旧缓存:",e),caches.delete(e)}))))}),self.addEventListener("fetch",e=>{const t=getCacheStrategy(e.request.url);"cache-first"===t.strategy?e.respondWith(cacheFirst(e.request,t.cacheName)):e.respondWith(networkFirst(e.request,t.cacheName))}),self.addEventListener("sync",e=>{console.log("[Service Worker] 后台同步事件:",e.tag),"sync-settings"===e.tag&&console.log("[Service Worker] 同步用户设置")}),self.addEventListener("push",e=>{console.log("[Service Worker] 收到推送消息:",e.data.text());const t=JSON.parse(e.data.text()),s={body:t.message,icon:"water"===t.type?"/assets/water-icon.png":"/assets/posture-icon.png",badge:"/assets/favicon.ico",vibrate:[100,50,100],data:{type:t.type,timestamp:Date.now()},actions:[{action:"confirm",title:"water"===t.type?"已喝水":"已起身活动"},{action:"snooze",title:"稍后提醒"}]};e.waitUntil(self.registration.showNotification(t.title,s))}),self.addEventListener("notificationclick",e=>{e.notification.close(),"confirm"===e.action?console.log("[Service Worker] 用户确认了提醒:",e.notification.data.type):"snooze"===e.action?console.log("[Service Worker] 用户选择稍后提醒:",e.notification.data.type):e.waitUntil(clients.matchAll({type:"window"}).then(e=>{for(const t of e)if("/"===t.url&&"focus"in t)return t.focus();if(clients.openWindow)return clients.openWindow("/")}))});