class ReminderManager{constructor(t,i,e,s=null){this.type=t,this.settings={...i},this.notificationService=e,this.activityDetector=s,this.isActive=!1,this.isPaused=!1,this.timer=null,this.startTime=null,this.pauseTime=null,this.nextReminderTime=null,this.timeRemaining=0,this.statusChangeCallback=null,this.timeUpdateCallback=null,this.updateInterval=1e3,this.updateTimer=null,"posture"===this.type&&this.activityDetector&&this.setupActivityDetection(),console.log(`${this.type}提醒管理器已创建`)}setupActivityDetection(){if(!this.activityDetector)return;const t=this.activityDetector.callback;this.activityDetector.callback=i=>{t&&t(i),this.handleActivityEvent(i)}}handleActivityEvent(t){if("posture"===this.type)switch(t.type){case"user-away":this.isActive&&!this.isPaused&&this.pause(!0);break;case"user-return":this.isActive&&this.isPaused&&this.resume(!0)}}start(){this.isActive?console.warn(`${this.type}提醒已经在运行中`):(this.isActive=!0,this.isPaused=!1,this.startTime=Date.now(),this.timeRemaining=60*this.settings.interval*1e3,this.nextReminderTime=this.startTime+this.timeRemaining,this.startTimer(),this.startUpdateTimer(),"posture"===this.type&&this.activityDetector&&this.activityDetector.startMonitoring(),this.triggerStatusChange({status:"started",isActive:!0,isPaused:!1,timeRemaining:this.timeRemaining}),console.log(`${this.type}提醒已启动，间隔: ${this.settings.interval}分钟`))}stop(){this.isActive?(this.isActive=!1,this.isPaused=!1,this.clearTimer(),this.clearUpdateTimer(),"posture"===this.type&&this.activityDetector&&this.activityDetector.stopMonitoring(),this.resetState(),this.triggerStatusChange({status:"stopped",isActive:!1,isPaused:!1,timeRemaining:0}),console.log(`${this.type}提醒已停止`)):console.warn(`${this.type}提醒未在运行`)}pause(t=!1){if(!this.isActive||this.isPaused)return void(t||console.warn(`${this.type}提醒未在运行或已暂停`));this.isPaused=!0,this.pauseTime=Date.now();const i=this.pauseTime-this.startTime;this.timeRemaining=Math.max(0,this.timeRemaining-i),this.clearTimer(),this.triggerStatusChange({status:"paused",isActive:!0,isPaused:!0,timeRemaining:this.timeRemaining,isAuto:t}),console.log(`${this.type}提醒已${t?"自动":"手动"}暂停`)}resume(t=!1){this.isActive&&this.isPaused?(this.isPaused=!1,this.startTime=Date.now(),this.nextReminderTime=this.startTime+this.timeRemaining,this.startTimer(),this.triggerStatusChange({status:"resumed",isActive:!0,isPaused:!1,timeRemaining:this.timeRemaining,isAuto:t}),console.log(`${this.type}提醒已${t?"自动":"手动"}恢复`)):t||console.warn(`${this.type}提醒未暂停`)}reset(){const t=this.isActive;this.isActive&&(this.clearTimer(),this.clearUpdateTimer()),this.resetState(),t&&this.start(),console.log(`${this.type}提醒已重置`)}acknowledge(){this.isActive?(this.settings.lastReminder=Date.now(),this.reset(),this.triggerStatusChange({status:"acknowledged",isActive:!0,isPaused:!1,timeRemaining:this.timeRemaining}),console.log(`${this.type}提醒已确认`)):console.warn(`${this.type}提醒未在运行`)}updateSettings(t){const i=this.settings.interval;if(this.settings={...this.settings,...t},t.interval&&t.interval!==i&&this.isActive){const e=60*t.interval*1e3;if(this.isPaused){const t=1-this.timeRemaining/(60*i*1e3);this.timeRemaining=Math.max(0,e*(1-t))}else{const t=(Date.now()-this.startTime)/(60*i*1e3);this.timeRemaining=Math.max(0,e*(1-t)),this.nextReminderTime=Date.now()+this.timeRemaining,this.clearTimer(),this.startTimer()}}console.log(`${this.type}提醒设置已更新:`,this.settings)}getCurrentStatus(){return{type:this.type,isActive:this.isActive,isPaused:this.isPaused,timeRemaining:this.timeRemaining,nextReminderTime:this.nextReminderTime,settings:{...this.settings},lastUpdate:Date.now()}}setStatusChangeCallback(t){this.statusChangeCallback=t}setTimeUpdateCallback(t){this.timeUpdateCallback=t}startTimer(){this.timer&&clearTimeout(this.timer),this.timer=setTimeout(()=>{this.triggerReminder()},this.timeRemaining)}clearTimer(){this.timer&&(clearTimeout(this.timer),this.timer=null)}startUpdateTimer(){this.updateTimer&&clearInterval(this.updateTimer),this.updateTimer=setInterval(()=>{this.updateTimeRemaining()},this.updateInterval)}clearUpdateTimer(){this.updateTimer&&(clearInterval(this.updateTimer),this.updateTimer=null)}updateTimeRemaining(){if(!this.isActive||this.isPaused)return;const t=Date.now();this.timeRemaining=Math.max(0,this.nextReminderTime-t),this.timeUpdateCallback&&this.timeUpdateCallback({type:this.type,timeRemaining:this.timeRemaining,nextReminderTime:this.nextReminderTime,progress:1-this.timeRemaining/(60*this.settings.interval*1e3)})}triggerReminder(){if(!this.isActive)return;const t="water"===this.type?"💧 喝水时间到了！":"🧘 该起身活动了！",i="water"===this.type?"长时间工作容易脱水，记得补充水分哦！":"久坐对身体不好，起来活动一下吧！";this.notificationService.showNotification(this.type,t,i,()=>this.acknowledge(),()=>this.snooze()),this.triggerStatusChange({status:"triggered",isActive:!0,isPaused:!1,timeRemaining:0}),setTimeout(()=>{this.isActive&&0===this.timeRemaining&&this.reset()},6e4),console.log(`${this.type}提醒已触发`)}snooze(){this.isActive&&(this.timeRemaining=3e5,this.startTime=Date.now(),this.nextReminderTime=this.startTime+this.timeRemaining,this.clearTimer(),this.startTimer(),this.triggerStatusChange({status:"snoozed",isActive:!0,isPaused:!1,timeRemaining:this.timeRemaining}),console.log(`${this.type}提醒已延迟5分钟`))}resetState(){this.startTime=null,this.pauseTime=null,this.nextReminderTime=null,this.timeRemaining=0}triggerStatusChange(t){this.statusChangeCallback&&this.statusChangeCallback({...t,type:this.type,timestamp:Date.now()})}restoreState(t){if(t)try{return this.isActive=t.isActive||!1,this.isPaused=t.isPaused||!1,t.timeRemaining&&(this.timeRemaining=t.timeRemaining),t.nextReminderAt?this.nextReminderTime=t.nextReminderAt:this.timeRemaining>0&&(this.nextReminderTime=Date.now()+this.timeRemaining),this.isActive&&!this.isPaused?(this.startTime=Date.now(),this.startTimer(),this.startUpdateTimer(),"posture"===this.type&&this.activityDetector&&this.activityDetector.startMonitoring(),this.triggerStatusChange({status:"restored",isActive:!0,isPaused:!1,timeRemaining:this.timeRemaining})):this.isActive&&this.isPaused&&(this.pauseTime=Date.now(),this.triggerStatusChange({status:"restored",isActive:!0,isPaused:!0,timeRemaining:this.timeRemaining})),console.log(`${this.type}提醒状态已恢复:`,{isActive:this.isActive,isPaused:this.isPaused,timeRemaining:this.timeRemaining}),!0}catch(t){return console.error(`恢复${this.type}提醒状态失败:`,t),!1}}destroy(){this.stop(),this.statusChangeCallback=null,this.timeUpdateCallback=null,"posture"===this.type&&this.activityDetector&&this.activityDetector.stopMonitoring(),console.log(`${this.type}提醒管理器已销毁`)}}"undefined"!=typeof module&&module.exports&&(module.exports=ReminderManager);